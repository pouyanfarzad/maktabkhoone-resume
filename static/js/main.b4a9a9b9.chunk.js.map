{"version":3,"sources":["sections/FullPage.js","components/downIcon.js","sections/Intro.js","sections/About.js","sections/Skill.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","children","react_default","a","createElement","className","concat","style","background","Component","downIcon","display","flexDirection","alignItems","justifyContent","marginBottom","transform","maxWidth","src","icon","Intro","sections_FullPage","color","data","title","subtitle","keys","links","map","el","react_social_icons","url","modules","activeClass","to","spy","smooth","offset","duration","onSetActive","handleSetActive","delay","components_downIcon","icons","down","name","About","id","sections","items","content","Skill","skill","image","baseComponent","changeTheme","fcolor","counter","setState","background_first","background_second","background_third","class","onClick","href","lib_default","animationInterval","usePositionFixed","useTwinkleEffect","sections_Intro","sections_About","sections_Skill","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"guCAuBeA,iCAlBX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,GAFEP,wEAKX,IACGQ,EAAYL,KAAKJ,MAAjBS,SACP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,YAAAC,OAAcV,KAAKJ,MAAMa,WAAa,GAAtC,KACdE,MAAO,CACHC,WAAWZ,KAAKJ,MAAMgB,aAGrBP,UAfMQ,6BCuBRC,EAvBE,SAAClB,GACd,OACIU,EAAAC,EAAAC,cAAA,OACAG,MAAO,CACLI,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,eAAgB,SAChBC,aAAc,QACdC,UAAW,sBAGbd,EAAAC,EAAAC,cAAA,OACEG,MAAQ,CACNU,SAAU,SAGZf,EAAAC,EAAAC,cAAA,OAAKc,IAAK1B,EAAM2B,kBC4BXC,mLAtCX,OACElB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiB,EAAD,CAAUhB,UAAU,QAAQG,WAAYZ,KAAKJ,MAAMgB,YACjDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUa,IAAI,kBAE7BhB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQE,MAAO,CAAEe,MAAO1B,KAAKJ,MAAM8B,QAC9CC,EAAKC,OAERtB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIG,MAAO,CAAEe,MAAO1B,KAAKJ,MAAM8B,QAAUC,EAAKE,WAEhDvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZX,OAAOgC,KAAKH,EAAKI,OAAOC,IAAI,SAAAC,GAC3B,OAAO3B,EAAAC,EAAAC,cAAC0B,EAAA,WAAD,CAAYC,IAAKR,EAAKI,MAAME,UAK3C3B,EAAAC,EAAAC,cAAC4B,EAAA,KAAD,CACEC,YAAY,SACZC,GAAG,QACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,GACRC,SAAU,IACVC,YAAa3C,KAAK4C,gBAClBC,MAAO,GAEPvC,EAAAC,EAAAC,cAACsC,EAAD,CACEvB,KAAMI,EAAKoB,MAAMC,QAGrB1C,EAAAC,EAAAC,cAAC4B,EAAA,QAAD,CAASa,KAAK,QAAQxC,UAAU,oBAnCpBI,aCSLqC,mLAXX,OACE5C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiB,EAAD,CAAUhB,UAAU,SAAS0C,GAAG,QAAQvC,WAAYZ,KAAKJ,MAAMgB,YAC7DN,EAAAC,EAAAC,cAAA,MAAIG,MAAO,CAAEe,MAAO1B,KAAKJ,MAAM8B,QAAUC,EAAKyB,SAAS,GAAGxB,OAC1DtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQE,MAAO,CAAEe,MAAO1B,KAAKJ,MAAM8B,QAAUC,EAAKyB,SAAS,GAAGC,MAAM,GAAGC,kBAN5EzC,aCwBL0C,mLAnBX,OACEjD,EAAAC,EAAAC,cAACiB,EAAD,CAAUhB,UAAU,QAAQG,WAAYZ,KAAKJ,MAAMgB,YACjDN,EAAAC,EAAAC,cAAA,MAAIG,MAAO,CAAEe,MAAO1B,KAAKJ,MAAM8B,QAAUC,EAAKyB,SAAS,GAAGxB,OAC1DtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZkB,EAAKyB,SAAS,GAAGC,MAAMrB,IAAI,SAAAwB,GAC1B,OACElD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKc,IAAKkC,EAAMF,QAAQG,SAE1BnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuB+C,EAAMF,QAAQ1B,mBAZhDf,8BCgFL6C,cA9Eb,SAAAA,EAAY9D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0D,IACjB7D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4D,GAAAvD,KAAAH,KAAMJ,KAUR+D,YAAc,WACZ,IAAIC,EAAS,CAAC,QAAS,UAAW,UAAW,WACzChD,EAAa,CAAC,UAAW,UAAW,UAAW,WAC/Cf,EAAKO,MAAMyD,QAAU,EACvBhE,EAAKiE,SAAS,CACZD,QAAS,EACTnC,MAAOkC,EAAO/D,EAAKO,MAAMyD,SACzBE,iBAAkB,WAClBC,kBAAmB,WACnBC,iBAAkB,aAGpBpE,EAAKiE,SAAS,CACZpC,MAAOkC,EAAO/D,EAAKO,MAAMyD,SACzBE,iBAAkBnD,EAAWf,EAAKO,MAAMyD,SACxCG,kBAAmBpD,EAAWf,EAAKO,MAAMyD,SACzCI,iBAAkBrD,EAAWf,EAAKO,MAAMyD,SACxCA,QAAShE,EAAKO,MAAMyD,QAAU,KA1BlChE,EAAKO,MAAQ,CACXsB,MAAO,QACPqC,iBAAkB,UAClBC,kBAAmB,UACnBC,iBAAkB,OAClBJ,QAAS,GAPMhE,wEAiCjB,OACES,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK0D,MAAM,UACT5D,EAAAC,EAAAC,cAAA,OAAK0D,MAAM,MAAMC,QAASnE,KAAK2D,aAC7BrD,EAAAC,EAAAC,cAAA,OAAK0D,MAAM,SAAS5C,IAAI,sBACxBhB,EAAAC,EAAAC,cAAA,OAAK0D,MAAM,WAAX,WAEF5D,EAAAC,EAAAC,cAAA,KAAG0D,MAAM,QAAQE,KAAK,WAAtB,UAGA9D,EAAAC,EAAAC,cAAA,KAAG0D,MAAM,QAAQE,KAAK,UAAtB,WAMJ9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAC6D,EAAA9D,EAAD,CACE+D,kBAAkB,KAClBC,iBAAiB,OACjBC,iBAAiB,SAGnBlE,EAAAC,EAAAC,cAACiE,EAAD,CACE/C,MAAO1B,KAAKI,MAAMsB,MAClBd,WAAYZ,KAAKI,MAAM2D,mBAEzBzD,EAAAC,EAAAC,cAAA,OAAK2C,GAAG,SACN7C,EAAAC,EAAAC,cAACkE,EAAD,CACAhD,MAAO1B,KAAKI,MAAMsB,MAClBd,WAAYZ,KAAKI,MAAM4D,qBAGzB1D,EAAAC,EAAAC,cAAA,OAAK2C,GAAG,UACN7C,EAAAC,EAAAC,cAACmE,EAAD,CACAjD,MAAO1B,KAAKI,MAAMsB,MAClBd,WAAYZ,KAAKI,MAAM6D,4BAvELpD,aCIR+D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5E,EAAAC,EAAAC,cAAC2E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b4a9a9b9.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './FullPage.css'\r\n\r\nclass Fullpage extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n      }\r\n\r\n    render(){\r\n        const {children} = this.props\r\n        return(\r\n            <div className={`fullpage ${this.props.className || ''} `} \r\n            style={{\r\n                background:this.props.background\r\n        \r\n              }}>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Fullpage","import React, { Component } from \"react\";\r\n\r\n\r\nconst downIcon = (props) => {\r\n    return(\r\n        <div \r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          marginBottom: \"-34px\",\r\n          transform: \"translateY(-45px)\"\r\n        }}\r\n      >\r\n        <div \r\n          style ={{\r\n            maxWidth: \"30px\"\r\n          }}\r\n        >\r\n          <img src={props.icon}></img>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default downIcon","import React, { Component } from \"react\";\r\nimport Fullpage from \"../sections/FullPage\";\r\nimport data from \"../data.json\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport \"./FullPage.css\";\r\nimport DownIcon from \"../components/downIcon\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nclass Intro extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"first\" background={this.props.background}>\r\n          <div className=\"fullpage first\">\r\n            <img className=\"profile\" src=\"images/me.jpg\" />\r\n\r\n            <h1 className=\"title\" style={{ color: this.props.color }}>\r\n              {data.title}\r\n            </h1>\r\n            <div>\r\n              <h2 style={{ color: this.props.color }}>{data.subtitle}</h2>\r\n            </div>\r\n            <div className=\"socialIcon\">\r\n              {Object.keys(data.links).map(el => {\r\n                return <SocialIcon url={data.links[el]} />;\r\n              })}\r\n            </div>\r\n          </div>\r\n        </Fullpage>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"about\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={50}\r\n          duration={500}\r\n          onSetActive={this.handleSetActive}\r\n          delay={0}\r\n        >\r\n          <DownIcon\r\n            icon={data.icons.down}\r\n          />\r\n        </Link>\r\n        <Element name=\"about\" className=\"element\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Intro;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../sections/FullPage\";\r\nimport data from \"../data.json\";\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"second\" id=\"About\" background={this.props.background}>\r\n          <h3 style={{ color: this.props.color }}>{data.sections[0].title}</h3>\r\n          <div className=\"intro\" style={{ color: this.props.color }}>{data.sections[0].items[0].content}</div>\r\n        </Fullpage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../sections/FullPage\";\r\nimport data from \"../data.json\";\r\n\r\n\r\nimport \"./FullPage.css\";\r\n\r\nclass Skill extends Component {\r\n  render() {\r\n    return (\r\n      <Fullpage className=\"third\" background={this.props.background}>\r\n        <h3 style={{ color: this.props.color }}>{data.sections[1].title}</h3>\r\n        <div className=\"cards-wrapper\">\r\n          {data.sections[1].items.map(skill => {\r\n            return (\r\n              <div className=\"card\">\r\n                <div className=\"image-wrapper\">\r\n                  <img src={skill.content.image} />\r\n                </div>\r\n                <div className=\"skill-title-wrapper\">{skill.content.title}</div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        </Fullpage>\r\n    );\r\n  }\r\n}\r\nexport default Skill;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./my.css\";\nimport Intro from \"./sections/Intro\";\nimport About from \"./sections/About\";\nimport Skill from \"./sections/Skill\";\nimport SnowStorm from \"react-snowstorm\";\n\nclass baseComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: \"white\",\n      background_first: \"#2525ca\",\n      background_second: \"#ffff50\",\n      background_third: \"gray\",\n      counter: 0\n    };\n  }\n\n  changeTheme = () => {\n    let fcolor = [\"green\", \"#b3cde0\", \"#f4b6c2\", \"#e6e6ea\"];\n    let background = [\"#461220\", \"#011f4b\", \"#251e3e\", \"#1e1f26\"];\n    if (this.state.counter > 3) {\n      this.setState({\n        counter: 0,\n        color: fcolor[this.state.counter],\n        background_first: \" #3c2f2f\",\n        background_second: \" #3c2f2f\",\n        background_third: \" #3c2f2f\"\n      });\n    } else\n      this.setState({\n        color: fcolor[this.state.counter],\n        background_first: background[this.state.counter],\n        background_second: background[this.state.counter],\n        background_third: background[this.state.counter],\n        counter: this.state.counter + 1\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          <div class=\"navbar\">\n            <div class=\"box\" onClick={this.changeTheme}>\n              <img class=\"wizard\" src=\"images/wizard.png\" />\n              <div class=\"caption\">try me</div>\n            </div>\n            <a class=\"right\" href=\"#Skills\">\n              Skills\n            </a>\n            <a class=\"right\" href=\"#About\">\n              About\n            </a>\n          </div>\n        </div>\n\n        <div className=\"navigation\" />\n        <SnowStorm\n          animationInterval=\"50\"\n          usePositionFixed=\"true\"\n          useTwinkleEffect=\"true\"\n        />\n\n        <Intro \n          color={this.state.color}\n          background={this.state.background_first}\n          />\n        <div id=\"About\">\n          <About\n          color={this.state.color}\n          background={this.state.background_second}      \n          />\n        </div>\n        <div id=\"Skills\">\n          <Skill \n          color={this.state.color}\n          background={this.state.background_third}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default baseComponent;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}